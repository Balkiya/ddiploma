import os
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
import pickle

# –ü–∞–ø–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∂–µ—Å—Ç–æ–≤
DATA_DIR = './gesture_type_data/static'
MODEL_PATH = '../app/models/gesture_static_model.pkl'

X, y = [], []
# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
for label in os.listdir(DATA_DIR):
    label_path = os.path.join(DATA_DIR, label)
    if not os.path.isdir(label_path):
        continue

    for file_name in os.listdir(label_path):
        if file_name.endswith('.npy'):
            file_path = os.path.join(label_path, file_name)
            keypoints = np.load(file_path).flatten()
            X.append(keypoints)
            y.append(label)

X = np.array(X)
y = np.array(y)

# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ train/test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

accuracy = model.score(X_test, y_test)
print(f"üéØ –¢–æ—á–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–π —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –º–æ–¥–µ–ª–∏: {accuracy:.2f}")

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
with open(MODEL_PATH, 'wb') as f:
    pickle.dump(model, f)

print(f"‚úÖ –ú–æ–¥–µ–ª—å gesture_static_model.pkl —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
